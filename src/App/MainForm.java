package App;

import BLL.*;
import Dalc.ReadFile;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.ListModel;

public class MainForm extends javax.swing.JFrame {

    String filePath = "/Users/MartinBJ/Dropbox/Datamatiker/NetBeans/TextSorting/brit-a-z-unordered.txt";
    int n;
    long time;
    Sorting sorter = new Sorting();
    
    public MainForm() {
        initComponents();
        
        btnGroupDirection.add(radioIncreasing);
        btnGroupDirection.add(radioDecreasing);
        
        btnGroupSorting.add(radioBubble);
        btnGroupSorting.add(radioSelection);
        
        btnRun.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                if(!txtAmount.getText().equals("")){
                    n = Integer.parseInt(txtAmount.getText());
                    long start = System.currentTimeMillis();
                    run();
                    long end = System.currentTimeMillis();
                    time = end - start;
                    updateList();
                } else JOptionPane.showMessageDialog(MainForm.this, "Please enter an amount...");
            }
        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnGroupDirection = new javax.swing.ButtonGroup();
        btnGroupSorting = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstWords = new javax.swing.JList();
        panelSorting = new javax.swing.JPanel();
        radioBubble = new javax.swing.JRadioButton();
        radioSelection = new javax.swing.JRadioButton();
        btnRun = new javax.swing.JButton();
        btnClose = new javax.swing.JButton();
        panelAmount = new javax.swing.JPanel();
        txtAmount = new javax.swing.JTextField();
        panelDirection = new javax.swing.JPanel();
        radioIncreasing = new javax.swing.JRadioButton();
        radioDecreasing = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Sorter");
        setResizable(false);

        jScrollPane1.setToolTipText("");

        jScrollPane1.setViewportView(lstWords);

        panelSorting.setBorder(javax.swing.BorderFactory.createTitledBorder("Sorting method"));

        radioBubble.setSelected(true);
        radioBubble.setText("Bubblesorting");

        radioSelection.setText("Selectionsorting");

        javax.swing.GroupLayout panelSortingLayout = new javax.swing.GroupLayout(panelSorting);
        panelSorting.setLayout(panelSortingLayout);
        panelSortingLayout.setHorizontalGroup(
            panelSortingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSortingLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelSortingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(radioBubble)
                    .addComponent(radioSelection))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelSortingLayout.setVerticalGroup(
            panelSortingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSortingLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(radioBubble)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(radioSelection)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        btnRun.setText("Run");

        btnClose.setText("Close");
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });

        panelAmount.setBorder(javax.swing.BorderFactory.createTitledBorder("Amount"));

        txtAmount.setText("1000");
        txtAmount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtAmountKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout panelAmountLayout = new javax.swing.GroupLayout(panelAmount);
        panelAmount.setLayout(panelAmountLayout);
        panelAmountLayout.setHorizontalGroup(
            panelAmountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelAmountLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtAmount)
                .addContainerGap())
        );
        panelAmountLayout.setVerticalGroup(
            panelAmountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelAmountLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(txtAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        panelDirection.setBorder(javax.swing.BorderFactory.createTitledBorder("Direction"));

        radioIncreasing.setSelected(true);
        radioIncreasing.setText("Increasing");

        radioDecreasing.setText("Decreasing");

        javax.swing.GroupLayout panelDirectionLayout = new javax.swing.GroupLayout(panelDirection);
        panelDirection.setLayout(panelDirectionLayout);
        panelDirectionLayout.setHorizontalGroup(
            panelDirectionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDirectionLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelDirectionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(radioIncreasing)
                    .addComponent(radioDecreasing))
                .addContainerGap(38, Short.MAX_VALUE))
        );
        panelDirectionLayout.setVerticalGroup(
            panelDirectionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDirectionLayout.createSequentialGroup()
                .addComponent(radioIncreasing)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(radioDecreasing)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel1.setText("Results:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnRun)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnClose)
                        .addGap(12, 12, 12))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(panelSorting, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(panelAmount, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(panelDirection, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(14, 14, 14))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(panelAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(12, 12, 12)
                            .addComponent(panelDirection, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(panelSorting, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jScrollPane1))
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRun)
                    .addComponent(btnClose))
                .addGap(11, 11, 11))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        System.exit(0);
    }//GEN-LAST:event_btnCloseActionPerformed

    private void txtAmountKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAmountKeyTyped
        char c = evt.getKeyChar();
        if (!Character.isDigit(c)) {
            evt.consume();
        }
    }//GEN-LAST:event_txtAmountKeyTyped

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClose;
    private javax.swing.ButtonGroup btnGroupDirection;
    private javax.swing.ButtonGroup btnGroupSorting;
    private javax.swing.JButton btnRun;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList lstWords;
    private javax.swing.JPanel panelAmount;
    private javax.swing.JPanel panelDirection;
    private javax.swing.JPanel panelSorting;
    private javax.swing.JRadioButton radioBubble;
    private javax.swing.JRadioButton radioDecreasing;
    public javax.swing.JRadioButton radioIncreasing;
    private javax.swing.JRadioButton radioSelection;
    private javax.swing.JTextField txtAmount;
    // End of variables declaration//GEN-END:variables
    
    void run() {
        if (radioBubble.isSelected()) sorter.bubblesort(readFile(n), direction());
        if (radioSelection.isSelected()) sorter.selectionsort(readFile(n), direction());
    }
    
    String[] readFile(int n) {
        try {
            ReadFile file = new ReadFile(filePath);
            String[] a = file.openFile(n);
            return a;
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
        return null;
    }
    
    void updateList() {
        DefaultListModel list = new DefaultListModel();
        String selected = "";
        if (radioBubble.isSelected()) selected = radioBubble.getText();
        if (radioSelection.isSelected()) selected = radioSelection.getText();
        String s = selected + " " + txtAmount.getText() + ": " + time + " ms";
        for (String line : listArray()) {
            list.addElement(line);
        }
        list.addElement(s);
        lstWords.setModel(list);
    }
    
    String[] listArray() {
        ListModel list = lstWords.getModel();
        String[] a = new String[list.getSize()];
        for (int i = 0; i < a.length; i++) {
            String line = list.getElementAt(i).toString();
            a[i] = line;
        }
        return a;
    }
    
    public boolean direction() {
        return radioIncreasing.isSelected();
    }
}